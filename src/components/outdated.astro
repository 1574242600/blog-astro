---
interface Props {
    lastUpdate: string
}

const { lastUpdate } = Astro.props
---

<div
    id='outdated'
    class='h-15 m-4 p-4 bg-[--outdated-bg-color] rounded border-2 border-[--outdated-border-color]'
>
    <div class='text-[--outdated-text-color] text-center'>
        本文最后更新于 <span data-last-update={lastUpdate}>N</span> 天前，文中所描述的信息可能已过时
    </div>
</div>

<script>
    import { addLoadEventListener, toDays } from '@utils/browser'

    const handler = () => {
        const span: HTMLElement | null = document.querySelector(
            '#outdated [data-last-update]',
        )

        if (span) {
            const lastUpdate = span.dataset.lastUpdate || Date.now()
            span.textContent =
                toDays(Date.now() - new Date(lastUpdate).getTime()) + ''
        }
    }

    addLoadEventListener('outdated', handler)
</script>
